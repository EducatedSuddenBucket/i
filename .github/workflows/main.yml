name: Rename and Deploy Images

on:
  push:
    paths:
      - 'img/**'
  workflow_dispatch:

permissions:
  contents: write  # Grant write permission to GITHUB_TOKEN

jobs:
  rename-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Generate random 5-letter string
      id: random-string
      run: |
        response=$(curl -s "https://www.random.org/strings/?num=1&len=5&digits=on&loweralpha=on&unique=on&format=plain&rnd=new")
        echo "RANDOM_STRING=${response}" >> $GITHUB_ENV

    - name: Rename and convert images
      run: |
        for file in img/*; do
          # Get the file extension
          ext="${file##*.}"
          
          # Generate new file name
          new_name="img/${{ env.RANDOM_STRING }}.png"

          # Convert .jpeg or .jpg to .png and rename other image files
          if [[ "$ext" == "jpeg" || "$ext" == "jpg" ]]; then
            convert "$file" "$new_name"  # Requires ImageMagick for conversion
            git rm "$file"
          else
            mv "$file" "$new_name"
            git rm "$file"
          fi

          # Add the new file to git
          git add "$new_name"
        done

    - name: Commit changes
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git commit -m "Renamed and converted images"
        git push

    - name: Checkout gh-pages branch
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: gh-pages

    - name: Copy renamed images to gh-pages/raw
      run: |
        for file in img/*.png; do
          cp "$file" gh-pages/raw/
        done

    - name: Generate HTML file for each image
      run: |
        for file in img/*.png; do
          filename=$(basename "$file" .png)
          IMAGE_URL="https://i.esb.is-a.dev/raw/${filename}.png"
          FILE_SIZE=$(du -k "$file" | cut -f1)
          HTML_CONTENT="<head>
              <meta charset=\"utf-8\">
              <title>${filename}.png</title>
              <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\">
              <meta property=\"og:title\" content=\"EducatedSuddenBucket\">
              <meta property=\"og:description\" content=\"I just used ${FILE_SIZE} KB in my PC to show you this.(jk)\">
              <meta property=\"og:site_name\" content=\"EducatedSuddenBucket\">
              <meta property=\"theme-color\" content=\"#2068f5\">
              <meta property=\"og:type\" content=\"image\">
              <meta property=\"og:image\" itemprop=\"image\" content=\"${IMAGE_URL}\">
              <meta property=\"og:url\" content=\"${IMAGE_URL}\">
              <meta property=\"twitter:card\" content=\"summary_large_image\">
              <meta property=\"twitter:image\" content=\"${IMAGE_URL}\">
              <meta property=\"twitter:title\" content=\"${filename}.png\">
              <style>
                body { background-color: #000; color: #fff; display: flex; justify-content: center; align-items: center; height: 100vh; }
                img { max-width: 100%; height: auto; }
              </style>
          </head>
          <body>
              <img src=\"${IMAGE_URL}\" alt=\"${filename}\">
          </body>"
          echo "$HTML_CONTENT" > gh-pages/${filename}.png.html
        done

    - name: Commit and push to gh-pages
      run: |
        cd gh-pages
        git add raw/*.png
        git add *.png.html
        git commit -m "Add renamed and converted images and HTML files"
        git push

    - name: Send Discord webhook
      run: |
        for file in img/*.png; do
          filename=$(basename "$file" .png)
          IMAGE_URL="https://i.esb.is-a.dev/${filename}.png"
          PAYLOAD=$(jq -n --arg url "$IMAGE_URL" --arg name "$IMAGE_URL" --argjson color 3447003 '{
            "embeds": [{
              "title": "Renamed Image",
              "description": $url,
              "color": $color,
              "url": $url
            }]
          }')
          curl -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
        done
